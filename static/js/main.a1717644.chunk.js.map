{"version":3,"sources":["Components/Row.js","App.js","index.js"],"names":["Row","props","currencyOptions","selectedCurrency","onChange","amount","onChangeAmount","className","value","type","placeholder","map","opt","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amountInFromCurrency","setAmountInFromCurrency","setAmount","useEffect","fetch","then","res","json","data","first","Object","keys","rates","base","undefined","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGe,SAASA,EAAKC,GAAS,IAE9BC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,SACAC,EAEAJ,EAFAI,OACAC,EACAL,EADAK,eAGJ,OACI,yBAAKC,UAAU,QACX,2BAAOC,MAAOH,EAAQD,SAAUE,EAAgBC,UAAU,MAAME,KAAK,SAASC,YAAY,mBAC1F,4BAAQH,UAAU,SAASC,MAAOL,EAAkBC,SAAUA,GAEtDF,EAAgBS,KAAK,SAAAC,GAAG,OACpB,4BAAQJ,MAAOI,EAAKC,IAAKD,GAAMA,Q,UCdjDE,EAAW,yCAwEFC,MAtEf,WAAgB,IAQVC,EAAWC,EARF,EACkCC,mBAAS,IAD3C,mBACNhB,EADM,KACYiB,EADZ,OAE4BD,qBAF5B,mBAENE,EAFM,KAESC,EAFT,OAGwBH,qBAHxB,mBAGNI,EAHM,KAGOC,EAHP,OAI4BL,qBAJ5B,mBAINM,EAJM,KAISC,EAJT,OAK4CP,oBAAS,GALrD,mBAKNQ,EALM,KAKiBC,EALjB,OAMgBT,mBAAS,GANzB,mBAMNb,EANM,KAMGuB,EANH,KAgDb,OAvCKF,GACHT,EAAaZ,EACbW,EAAWX,EAASmB,IAGpBR,EAAWX,EACXY,EAAaZ,EAASmB,GAGxBK,qBAAW,WACTC,MAAMhB,GACLiB,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACL,IAAIC,EAAQC,OAAOC,KAAMH,EAAKI,OAAQ,GACtCnB,EAAmB,CAAGe,EAAKK,MAAT,mBAAkBH,OAAOC,KAAMH,EAAKI,UACtDjB,EAAiBa,EAAKK,MACtBhB,EAAeY,GACfV,EAAmBS,EAAKI,MAASH,SAEnC,IAEFN,qBAAW,gBACUW,GAAhBpB,QAA2CoB,GAAdlB,GAC9BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IACjDS,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GAAI,OAAIT,EAAiBS,EAAKI,MAAMhB,SAE5C,CAACF,EAAeE,IAajB,yBAAKf,UAAU,QACb,kDACA,kBAACP,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,SAAW,SAAAqC,GAAC,OAAIpB,EAAiBoB,EAAEC,OAAOlC,QAC1CH,OAAQY,EACRX,eAlBJ,SAAgCmC,GAC9Bb,EAAUa,EAAEC,OAAOlC,OACnBmB,GAAwB,MAkBtB,iCACA,kBAAC3B,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBmB,EAClBlB,SAAW,SAAAqC,GAAC,OAAIlB,EAAekB,EAAEC,OAAOlC,QACxCH,OAAQW,EACRV,eArBJ,SAA8BmC,GAC5Bb,EAAUa,EAAEC,OAAOlC,OACnBmB,GAAwB,QC/C5BgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.a1717644.chunk.js","sourcesContent":["import React from 'react'\r\nimport './row.css'\r\n\r\nexport default function Row( props ) {\r\n    const {\r\n        currencyOptions,\r\n        selectedCurrency,\r\n        onChange,\r\n        amount,\r\n        onChangeAmount\r\n    } = props\r\n\r\n    return (\r\n        <div className=\"Main\">\r\n            <input value={amount} onChange={onChangeAmount} className=\"inp\" type=\"number\" placeholder=\"Enter a number\"></input>\r\n            <select className=\"select\" value={selectedCurrency} onChange={onChange}>\r\n                {\r\n                    currencyOptions.map( opt => (\r\n                        <option value={opt} key={opt}>{opt}</option>\r\n                    ))\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React , {useEffect , useState} from 'react';\nimport Row from './Components/Row'\nimport './App.css'\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n  const [currencyOptions , setCurrencyOptions] = useState([]);\n  const [fromCurrency , setFromCurrency] = useState();\n  const [toCurrency , setToCurrency] = useState();\n  const [exchangeRate , setExchangeRate] = useState();\n  const [amountInFromCurrency , setAmountInFromCurrency] = useState(true);\n  const [amount , setAmount] = useState(1);\n\n  let toAmount , fromAmount;\n  if ( amountInFromCurrency ) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  }\n  else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect( () => {\n    fetch(BASE_URL)\n    .then( res => res.json() )\n    .then( data => {\n      let first = Object.keys( data.rates )[0];\n      setCurrencyOptions( [ data.base, ...Object.keys( data.rates )  ] );\n      setFromCurrency( data.base );\n      setToCurrency( first ) \n      setExchangeRate( ( data.rates )[ first ] )\n    })\n  },[])\n\n  useEffect( () => {\n    if(fromCurrency != undefined && toCurrency != undefined) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then( res => res.json() )\n      .then( data => setExchangeRate( data.rates[toCurrency] ) )\n    }\n  }, [fromCurrency , toCurrency])\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return (\n    <div className=\"main\">\n      <h1>Currency convertor</h1>\n      <Row  \n      currencyOptions={currencyOptions}\n      selectedCurrency={fromCurrency}\n      onChange={ e => setFromCurrency( e.target.value ) }\n      amount={fromAmount}\n      onChangeAmount={handleFromAmountChange}\n      />\n      <h2>=</h2>\n      <Row \n      currencyOptions={currencyOptions}\n      selectedCurrency={toCurrency}\n      onChange={ e => setToCurrency( e.target.value ) }\n      amount={toAmount}\n      onChangeAmount={handleToAmountChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}